#+TITLE: Guix Rustup
#+OPTIONS: d:nil
#+EXPORT_FILE_NAME: guix-rustup.texi
#+TEXINFO_DIR_CATEGORY: Guix Channels
#+TEXINFO_DIR_TITLE: Guix Rustup: (guix-rustup).
#+TEXINFO_DIR_DESC: Rust binary toolchain channel for Guix

https://forge.rust-lang.org/infra/channel-layout.html
https://forge.rust-lang.org/infra/other-installation-methods.html

* Overview

Guix Rustup

** Channel introduction
In case you want to use this channel, add the following code to
your ~~/.config/guix/channels.scm~, and call ~guix pull~.
#+begin_src scheme
  (cons*
   (channel
    (name 'rustup)
    (url "https://github.com/declantsien/guix-rustup")
    (introduction
     (make-channel-introduction
      "325d3e2859d482c16da21eb07f2c6ff9c6c72a80"
      (openpgp-fingerprint
       "F695 F39E C625 E081 33B5  759F 0FC6 8703 75EF E2F5"))))
   %default-channels)
#+end_src

** Usage

*** For stable Rusts
#+begin_src shell
  guix search rust-bin
#+end_src

*** For latest nightly/beta
#+begin_src
  guix build -e '((@@ (rustup build toolchain) rustup) "stable")'
  guix build -e '((@@ (rustup build toolchain) rustup) "beta")'
  guix build -e '((@@ (rustup build toolchain) rustup) "nightly")'
#+end_src

*** With =guix shell= =manifest.scm=

#+begin_src scheme
  (use-modules (rustup build toolchain))

  ;; (packages->manifest (list (rustup "nightly-2024-05-18")))

  (packages->manifest (list (rustup)))
#+end_src

*** Rustup toolchain file
=rustup-toolchain=
=rustup-toolchain.toml=

Procedure =rustup= will search for these two file in parent folders like
=guix shell= search for =mainfest.scm= file. You can manully specify the
location of the toolchain file with =(rustup "path/to/rust-toolchain")=

*** =rustup= arguments
#+begin_src scheme
    (define* (rustup #:optional (channel-or-toolchain-file #f)
		   #:key
		   (components (list ))
		   (targets (list ))
		   (profile 'default))
      ...)
#+end_src

** Using rustup dist server mirror
#+begin_src shell
  export RUSTUP_DIST_SERVER="https://mirrors.ustc.edu.cn/rust-static"
#+end_src

